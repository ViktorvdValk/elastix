name: CMake

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 3
      matrix:
        os: [windows-2019]
#         os: [ubuntu-18.04, windows-2019, macos-10.15]
        include:
#           - os: ubuntu-18.04
#             c-compiler: "gcc"
#             cxx-compiler: "g++"
#             itk-git-tag: "v5.1.1"
#             cmake-build-type: "MinSizeRel"
#             ANNLib: "ANN/libANNlib-5.0.so"
          - os: windows-2019
            c-compiler: "cl.exe"
            cxx-compiler: "cl.exe"
            itk-git-tag: "v5.1.1"
            cmake-build-type: "Release"
            ANNLib: "ANN/ANNlib-5.0.dll"
#           - os: macos-10.15 
#             c-compiler: "clang"  
#             cxx-compiler: "clang++"
#             itk-git-tag: "v5.1.1"  
#             cmake-build-type: "MinSizeRel"
#             ANNLib: "ANN/libANNlib-5.0.1.dylib"

    steps:
    - uses: actions/checkout@v2
    
    - uses: actions/cache@v2
      id: cache
      with:
        path: |
          ITK-build
          ITK-source
        key: ${{ matrix.os }}-${{ matrix.itk-git-tag }}
      
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install ninja
        
    - name: Make directory structure
      run: |
        items=(*)
        mkdir Elastix-source
        mv ${items[*]} Elastix-source
        mv .editorconfig Elastix-source
        mv .clang-format Elastix-source
      shell: bash
    
    - name: Download ITK
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        ls
        git clone https://github.com/InsightSoftwareConsortium/ITK.git --branch ${{ matrix.itk-git-tag }} --depth 1 ITK-source
   
    - name: Build ITK
      if: steps.cache.outputs.cache-hit != 'true' && matrix.os != 'windows-2019'
      run: |
        ls
        mkdir ITK-build
        cd ITK-build
        cmake -DCMAKE_C_COMPILER:FILEPATH="${{ matrix.c-compiler }}" -DBUILD_SHARED_LIBS:BOOL=ON -DCMAKE_CXX_COMPILER="${{ matrix.cxx-compiler }}" -DCMAKE_BUILD_TYPE:STRING=${{ matrix.cmake-build-type }} -DBUILD_EXAMPLES=OFF -DBUILD_TESTING:BOOL=OFF -DITK_LEGACY_REMOVE=ON -GNinja ../ITK-source
        ninja
        
    - name: Build ITK
      if: steps.cache.outputs.cache-hit != 'true' && matrix.os == 'windows-2019'
      run: |
        ls
        mkdir ITK-build
        cd ITK-build
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        cmake -DCMAKE_C_COMPILER:FILEPATH="${{ matrix.c-compiler }}" -DBUILD_SHARED_LIBS:BOOL=ON -DCMAKE_CXX_COMPILER="${{ matrix.cxx-compiler }}" -DCMAKE_BUILD_TYPE:STRING=${{ matrix.cmake-build-type }} -DBUILD_EXAMPLES=OFF -DBUILD_TESTING:BOOL=OFF -DITK_LEGACY_REMOVE=ON -GNinja ../ITK-source
        ninja
      shell: cmd
    
    - name: Build Elastix
      if: matrix.os != 'windows-2019'
      run: |
        ls
        mkdir Elastix-build
        cd Elastix-build
        cmake -DCMAKE_C_COMPILER:FILEPATH="${{ matrix.c-compiler }}" -DCMAKE_CXX_COMPILER="${{ matrix.cxx-compiler }}" -DCMAKE_BUILD_TYPE:STRING=${{ matrix.cmake-build-type }} -DITK_DIR=../ITK-build -DBUILD_TESTING=ON -DELASTIX_USE_GTEST=ON -DUSE_ALL_COMPONENTS=ON -GNinja ../Elastix-source
        ninja
        
    - name: Build Elastix
      if: matrix.os == 'windows-2019'
      run: |
        ls
        mkdir Elastix-build
        cd Elastix-build
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        cmake -DCMAKE_C_COMPILER:FILEPATH="${{ matrix.c-compiler }}" -DCMAKE_CXX_COMPILER="${{ matrix.cxx-compiler }}" -DCMAKE_BUILD_TYPE:STRING=${{ matrix.cmake-build-type }} -DITK_DIR= ../ITK-build -DBUILD_TESTING=ON -DELASTIX_USE_GTEST=ON -DUSE_ALL_COMPONENTS=ON -GNinja ../Elastix-source
        ninja
      shell: cmd
      
#     - name: Test
#       shell: bash
#       # Execute tests defined by the CMake configuration.  
#       # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
#       run: |
#         cd ..
#         cd Elastix-build
#         ctest -C Release -VV -j 2

#     - name: Publish Artifacts
#       uses: actions/upload-artifact@v2
#       with: 
#         name: "${{ matrix.os }}"
#         path: ITK-build
        
    - name: Publish Artifacts
      uses: actions/upload-artifact@v2
      with: 
        name: "${{ matrix.os }}"
        path: D:\a\elastix\elastix\Elastix-build\bin\elastix.exe
        
    - name: Publish Artifacts
      uses: actions/upload-artifact@v2
      with: 
        name: "${{ matrix.os }}"
        path: Elastix-build\bin\elastix.exe
